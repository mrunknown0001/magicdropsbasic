import{u as T,r as a,s as h,z as i}from"./index-C2zOcIr5.js";const I=()=>{const{user:r}=T(),[c,D]=a.useState(()=>{try{const t=sessionStorage.getItem("userProfileData");if(t){const e=JSON.parse(t);if(e.lastFetchTime&&Date.now()-e.lastFetchTime<10*60*1e3)return e.profileData||null}}catch(t){console.error("Error retrieving stored profile data:",t)}return null}),[E,f]=a.useState(!1),[y,u]=a.useState(null),[n,m]=a.useState(()=>{try{const t=sessionStorage.getItem("userProfileData");if(t)return JSON.parse(t).lastFetchTime||0}catch(t){console.error("Error retrieving last fetch time:",t)}return 0}),p=a.useRef(!1),g=a.useCallback(async(t=!1)=>{if(!(r!=null&&r.id))return console.log("No user ID available, skipping profile data fetch"),null;if(p.current)return console.log("Profile data fetch already in progress, skipping"),c;const e=Date.now();if(!t&&n&&e-n<5e3)return console.log(`In cooling period, not fetching again. Last fetch: ${new Date(n).toLocaleTimeString()}`),c;n&&e-n<10*60*1e3||f(!0),p.current=!0,u(null);try{console.log("Fetching profile data for user:",r.id);const{data:o,error:l}=await h.from("profiles").select("*").eq("id",r.id).single();if(l)throw l;console.log("Fetched profile data:",o),D(o);const w=Date.now();m(w);try{sessionStorage.setItem("userProfileData",JSON.stringify({profileData:o,lastFetchTime:w}))}catch(S){console.error("Error storing profile data in session storage:",S)}return o}catch(o){return console.error("Error fetching profile data:",o),u(o instanceof Error?o:new Error("Failed to fetch profile data")),i.error("Failed to fetch profile data"),null}finally{f(!1),p.current=!1}},[r,c,n]),F=a.useCallback(async t=>{if(!(r!=null&&r.id))return i.error("User not authenticated"),null;f(!0),u(null);try{const e={...t};e.date_of_birth===""&&(e.date_of_birth=null),Object.keys(e).forEach(l=>{e[l]===""&&(e[l]=null)}),console.log("Updating profile with cleaned data:",e),console.log("User ID for update:",r.id);const{data:d,error:s}=await h.from("profiles").update(e).eq("id",r.id).select("*").single();if(s)throw console.error("Supabase update error:",s),console.error("Error details:",{code:s.code,message:s.message,details:s.details,hint:s.hint}),s;console.log("Profile updated successfully:",d),D(d);const o=Date.now();m(o);try{sessionStorage.setItem("userProfileData",JSON.stringify({profileData:d,lastFetchTime:o}))}catch(l){console.error("Error storing updated profile data in session storage:",l)}return i.success("Profile updated successfully"),d}catch(e){return console.error("Error updating profile:",e),u(e instanceof Error?e:new Error("Failed to update profile")),i.error("Failed to update profile"),null}finally{f(!1)}},[r]),P=a.useCallback(async t=>{if(!r)return i.error("User not authenticated"),!1;f(!0),u(null);try{const{error:e}=await h.auth.updateUser({password:t});if(e)throw e;return i.success("Password updated successfully"),!0}catch(e){return console.error("Error updating password:",e),u(e instanceof Error?e:new Error("Failed to update password")),i.error("Failed to update password"),!1}finally{f(!1)}},[r]);return a.useEffect(()=>{r&&!c&&g()},[r,g,c]),{profileData:c,loading:E,error:y,lastFetchTime:n,fetchProfileData:g,updateProfile:F,updatePassword:P}};export{I as u};
