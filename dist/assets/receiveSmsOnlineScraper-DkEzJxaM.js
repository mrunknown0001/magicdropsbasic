var v=Object.defineProperty;var k=(E,s,e)=>s in E?v(E,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):E[s]=e;var p=(E,s,e)=>k(E,typeof s!="symbol"?s+"":s,e);class T{static async scrapeMessages(s){const e=Date.now(),o={};try{if(console.log(`Starting enhanced scrape for URL: ${s}`),await this.enforceEnhancedRateLimit(s),!this.isValidUrl(s))throw new Error("Invalid receive-sms-online.info URL");let r=null,n=null,a="";const c=this.getCachedProxy(s);if(c&&c.failureRate<.5)try{console.log(`Trying cached proxy: ${c.proxy} (failure rate: ${(c.failureRate*100).toFixed(1)}%)`);const t=await this.fetchWithProxy(s,c.proxy,this.FAST_TIMEOUT);t.html&&!this.isErrorResponse(t.html)&&(r=t.html,a="cached-proxy",o.httpStatus=t.status,o.responseTime=Date.now()-e,this.updateProxyPerformance(c.proxy,!0,o.responseTime,t.status))}catch(t){console.warn(`Cached proxy ${c.proxy} failed:`,t),this.updateProxyPerformance(c.proxy,!1,Date.now()-e,0),this.clearCachedProxy(s),n=t instanceof Error?t:new Error("Unknown cached proxy error")}if(!r)try{console.log("Trying enhanced direct fetch...");const t=await this.fetchDirectEnhanced(s,this.TIMEOUT);t.html&&!this.isErrorResponse(t.html)&&(r=t.html,a="direct-enhanced",o.httpStatus=t.status,o.responseTime=Date.now()-e)}catch(t){console.warn("Enhanced direct fetch failed:",t),n=t instanceof Error?t:new Error("Unknown direct fetch error")}if(!r){const t=this.getSortedProxiesByPerformance();for(const l of t.slice(0,3))if(l!==(c==null?void 0:c.proxy))try{console.log(`Trying high-performance proxy: ${l}`);const i=await this.fetchWithProxy(s,l,this.TIMEOUT);if(i.html&&!this.isErrorResponse(i.html)){r=i.html,a="performance-proxy",o.httpStatus=i.status,o.responseTime=Date.now()-e,this.updateProxyPerformance(l,!0,o.responseTime,i.status),this.setCachedProxy(s,l,.1);break}}catch(i){console.warn(`Proxy ${l} failed:`,i),this.updateProxyPerformance(l,!1,Date.now()-e,0),n=i instanceof Error?i:new Error("Unknown proxy error");continue}}if(!r)try{console.log("Trying mobile user agent fallback...");const t=await this.fetchWithMobileUA(s,this.TIMEOUT);t.html&&!this.isErrorResponse(t.html)&&(r=t.html,a="mobile-ua",o.httpStatus=t.status,o.responseTime=Date.now()-e)}catch(t){console.warn("Mobile UA fetch failed:",t),n=t instanceof Error?t:new Error("Unknown mobile fetch error")}if(!r)throw n||new Error("All fetch methods failed - service may be blocking requests");return o.fetchMethod=a,o.contentLength=r.length,o.serviceAccessible=!0,this.parseAndReturnEnhanced(r,e,o)}catch(r){return console.error("Error scraping messages:",r),o.serviceAccessible=!1,{success:!1,messages:[],error:r instanceof Error?r.message:"Unknown scraping error",lastScrapedAt:new Date().toISOString(),debugInfo:o}}}static async enforceEnhancedRateLimit(s){const e=Date.now(),o=this.lastRequestTimes.get(s)||0,r=this.failureCount.get(s)||0,n=this.REQUEST_DELAY,a=Math.min(Math.pow(2,r),8),c=n*a,t=e-o;if(t<c){const l=c-t;console.log(`Enhanced rate limiting: waiting ${l}ms (${r} previous failures)`),await new Promise(i=>setTimeout(i,l))}this.lastRequestTimes.set(s,e)}static async fetchDirectEnhanced(s,e){const o=this.USER_AGENTS[Math.floor(Math.random()*this.USER_AGENTS.length)],r=new AbortController,n=setTimeout(()=>r.abort(),e);try{const a=await fetch(s,{method:"GET",headers:{Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8","Accept-Language":"en-US,en;q=0.5","Accept-Encoding":"gzip, deflate, br",DNT:"1",Connection:"keep-alive","Upgrade-Insecure-Requests":"1","Sec-Fetch-Dest":"document","Sec-Fetch-Mode":"navigate","Sec-Fetch-Site":"none","Cache-Control":"no-cache",Pragma:"no-cache","User-Agent":o},signal:r.signal});if(clearTimeout(n),!a.ok)throw new Error(`HTTP ${a.status}: ${a.statusText}`);return{html:await a.text(),status:a.status}}catch(a){throw clearTimeout(n),a}}static async fetchWithProxy(s,e,o){const r=e.includes("allorigins.win/get?")?`${e}${encodeURIComponent(s)}`:`${e}${encodeURIComponent(s)}`,n=new AbortController,a=setTimeout(()=>n.abort(),o);try{const c=await fetch(r,{method:"GET",headers:{Accept:"application/json, text/html, */*","Cache-Control":"no-cache","User-Agent":this.USER_AGENTS[0]},signal:n.signal});if(clearTimeout(a),!c.ok)throw new Error(`Proxy returned HTTP ${c.status}: ${c.statusText}`);let t;if((c.headers.get("content-type")||"").includes("application/json")){const i=await c.json();t=i.contents||i.data||""}else t=await c.text();return{html:t,status:c.status}}catch(c){throw clearTimeout(a),c}}static isErrorResponse(s){const e=["access denied","forbidden","error 403","blocked","bot detected","cloudflare","security check","rate limit","too many requests"],o=s.toLowerCase();return e.some(r=>o.includes(r))}static parseMessages(s){var o;const e=[];try{console.log("Enhanced parsing HTML content..."),console.log("HTML length:",s.length),console.log("First 500 chars of HTML:",s.substring(0,500));const n=new DOMParser().parseFromString(s,"text/html"),a=Array.from(n.querySelectorAll("table tbody tr")).filter(t=>{var h,m,d,g,y,x;const l=(m=(h=t.querySelector('td[data-label="From   :"]'))==null?void 0:h.textContent)==null?void 0:m.trim(),i=(g=(d=t.querySelector('td[data-label="Message   :"]'))==null?void 0:d.textContent)==null?void 0:g.trim(),u=(x=(y=t.querySelector('td[data-label="Added   :"]'))==null?void 0:y.textContent)==null?void 0:x.trim();return l&&i&&u});if(a.length>0&&(console.log("Found data-label format table rows:",a.length),a.forEach(t=>{var h,m,d,g,y,x;const l=((m=(h=t.querySelector('td[data-label="From   :"]'))==null?void 0:h.textContent)==null?void 0:m.trim())||"",i=((g=(d=t.querySelector('td[data-label="Message   :"]'))==null?void 0:d.textContent)==null?void 0:g.trim())||"",u=((x=(y=t.querySelector('td[data-label="Added   :"]'))==null?void 0:y.textContent)==null?void 0:x.trim())||"";this.isValidReceiveSmsMessage(l,i)&&e.push({sender:l,message:i,received_at:this.parseTimestamp(u),raw_html:t.outerHTML})}),e.length>0))return console.log(`Data-label parsing found ${e.length} messages`),e;console.log("Trying standard table parsing...");const c=n.querySelectorAll("table");console.log("Tables found:",c.length);for(let t=0;t<c.length;t++){const l=c[t],i=Array.from(l.querySelectorAll("tr"));console.log(`Table ${t} has ${i.length} rows`),i.forEach((u,h)=>{var d,g,y,x,C,M,A,S,P,$,R,_;if(h===0)return;const m=u.querySelectorAll("td, th");if(console.log(`Row ${h} has ${m.length} cells`),m.length>=3){const w=((g=(d=m[0])==null?void 0:d.textContent)==null?void 0:g.trim())||"",f=((x=(y=m[1])==null?void 0:y.textContent)==null?void 0:x.trim())||"",b=((M=(C=m[2])==null?void 0:C.textContent)==null?void 0:M.trim())||"";console.log(`Row ${h} data:`,{sender:w,message:f.substring(0,50),timeText:b}),this.isValidReceiveSmsMessage(w,f)?(console.log(`Valid message found in row ${h}`),e.push({sender:w,message:f,received_at:this.parseTimestamp(b),raw_html:u.outerHTML})):console.log(`Invalid message in row ${h}:`,{sender:w,message:f.substring(0,20)})}else if(m.length===2){const w=((S=(A=m[0])==null?void 0:A.textContent)==null?void 0:S.trim())||"",f=(($=(P=m[1])==null?void 0:P.textContent)==null?void 0:$.trim())||"";console.log(`2-column row ${h}:`,{sender:w,message:f.substring(0,50)}),this.isValidReceiveSmsMessage(w,f)&&(console.log(`Valid 2-column message found in row ${h}`),e.push({sender:w,message:f,received_at:this.parseTimestamp(""),raw_html:u.outerHTML}))}else if(m.length===1){const w=((_=(R=m[0])==null?void 0:R.textContent)==null?void 0:_.trim())||"";console.log(`Single cell row ${h}:`,w.substring(0,100));const f=w.split(/[|\-:]/);if(f.length>=2){const b=f[0].trim(),U=f.slice(1).join(" ").trim();this.isValidReceiveSmsMessage(b,U)&&(console.log(`Valid single-cell message found in row ${h}`),e.push({sender:b,message:U,received_at:this.parseTimestamp(""),raw_html:u.outerHTML}))}}})}if(e.length===0&&(console.log("Trying div-based parsing..."),n.querySelectorAll("div, section, article").forEach((l,i)=>{var h;const u=((h=l.textContent)==null?void 0:h.trim())||"";if(u.includes("comdirect")&&u.includes("Bitte nicht weitergeben")){console.log(`Found comdirect in container ${i}:`,u.substring(0,100));const m=u.indexOf("comdirect"),d=u.indexOf("Bitte nicht weitergeben",m);if(d>-1){const g=u.substring(d).split(/[|\n\r]/)[0].trim();g.length>10&&(console.log("Extracted comdirect message from div:",g),e.push({sender:"comdirect",message:g,received_at:this.parseTimestamp(""),raw_html:l.outerHTML}))}}})),e.length===0&&(console.log("Trying list-based parsing..."),n.querySelectorAll("li, ul > *, ol > *").forEach((l,i)=>{var h;const u=((h=l.textContent)==null?void 0:h.trim())||"";if(u.includes("comdirect")&&u.length>20){console.log(`Found comdirect in list item ${i}:`,u.substring(0,100));const m=u.split(/[|\-:]/);if(m.length>=2){const d=m[0].trim(),g=m.slice(1).join(" ").trim();d.toLowerCase().includes("comdirect")&&g.length>10&&e.push({sender:"comdirect",message:g,received_at:this.parseTimestamp(""),raw_html:l.outerHTML})}}})),e.length===0){console.log("Trying specific receive-sms-online patterns...");const t=((o=n.body)==null?void 0:o.textContent)||s,l=/From:\s*([^\n\r]+)[\s\S]*?Message:\s*([^\n\r]+)/gi;let i;for(;(i=l.exec(t))!==null;){const d=i[1].trim(),g=i[2].trim();this.isValidReceiveSmsMessage(d,g)&&(console.log("Found message via pattern matching:",{sender:d,message:g.substring(0,30)}),e.push({sender:d,message:g,received_at:this.parseTimestamp(""),raw_html:`Pattern match: ${i[0]}`}))}const u=/(Celerity|Instagram|Facebook|Google|WhatsApp|Telegram|Twitter|Apple|Microsoft|Amazon|Netflix|Uber|PayPal|comdirect|[A-Z][a-z]+)[\s:]*([0-9A-Z]{4,})/gi;for(;(i=u.exec(t))!==null;){const d=i[1].trim(),g=i[2].trim();g.length>=4&&g.length<=8&&(console.log("Found verification code via pattern:",{sender:d,code:g}),e.push({sender:d,message:`Your verification code is: ${g}`,received_at:this.parseTimestamp(""),raw_html:`Pattern match: ${i[0]}`}))}const h="Bitte nicht weitergeben - hier ist das Passwort für Ihren comdirect Eröffnungsantrag: G98b-TQXb";t.includes(h)&&(console.log("🎯 Found specific comdirect message in text content!"),e.push({sender:"comdirect",message:h,received_at:this.parseTimestamp(""),raw_html:"Direct text extraction"}));const m=/comdirect[\s\S]*?(Bitte nicht weitergeben[^|]*)/gi;for(;(i=m.exec(t))!==null;){const d=i[1].trim();d.length>10&&(console.log("Found comdirect message via flexible pattern:",d.substring(0,50)),e.push({sender:"comdirect",message:d,received_at:this.parseTimestamp(""),raw_html:`Flexible pattern match: ${i[0]}`}))}}return console.log(`Enhanced parsing found ${e.length} messages`),e}catch(r){return console.error("Error parsing messages:",r),[]}}static isValidReceiveSmsMessage(s,e){return!(!s||!e||(s=s.trim(),e=e.trim(),s.length<2||e.length<3)||![/^[a-zA-Z0-9\s\-_.@+]{2,}$/,/^\+?\d{7,15}$/,/^[a-zA-Z][a-zA-Z0-9\s]{1,}$/].some(c=>c.test(s))||e.length<5||[/^[\s\-_=+]*$/,/^test\s*$/i,/^example/i,/^lorem\s+ipsum/i].some(c=>c.test(e)))}static isValidMessage(s,e){if(!s||!e)return!1;const o=/(\+?\d{8,15}|[a-zA-Z]{2,})/.test(s),r=e.length>3&&!/^[\s\-_.*]+$/.test(e);return o&&r}static updateProxyPerformance(s,e,o,r){const n=this.proxyPerformance.get(s)||{successCount:0,failCount:0,avgResponseTime:0,lastSuccess:0,blocked403Count:0};e?(n.successCount++,n.avgResponseTime=(n.avgResponseTime+o)/2,n.lastSuccess=Date.now()):(n.failCount++,r===403&&n.blocked403Count++),this.proxyPerformance.set(s,n)}static setCachedProxy(s,e,o){this.proxyCache.set(s,{proxy:e,timestamp:Date.now(),failureRate:o})}static parseAndReturnEnhanced(s,e,o){const r=this.parseMessages(s),n=Date.now()-e;return console.log(`Enhanced scraping completed. Found ${r.length} messages in ${n}ms using ${o==null?void 0:o.fetchMethod}`),o.responseTime=n,{success:!0,messages:r,lastScrapedAt:new Date().toISOString(),debugInfo:o}}static isValidUrl(s){try{const e=new URL(s);return e.hostname==="receive-sms-online.info"&&e.pathname==="/private.php"&&e.searchParams.has("phone")&&e.searchParams.has("key")}catch{return!1}}static getCachedProxy(s){const e=this.proxyCache.get(s);return e&&Date.now()-e.timestamp<this.PROXY_CACHE_TTL?{proxy:e.proxy,failureRate:e.failureRate}:(e&&this.proxyCache.delete(s),null)}static clearCachedProxy(s){this.proxyCache.delete(s)}static getSortedProxiesByPerformance(){return[...this.CORS_PROXIES].sort((s,e)=>{const o=this.proxyPerformance.get(s),r=this.proxyPerformance.get(e);if(!o&&!r)return 0;if(!o)return 1;if(!r)return-1;const n=o.successCount/(o.successCount+o.failCount),a=r.successCount/(r.successCount+r.failCount);return n!==a?a-n:o.avgResponseTime-r.avgResponseTime})}static async fetchWithMobileUA(s,e){const o=new AbortController,r=setTimeout(()=>o.abort(),e);try{const n=await fetch(s,{method:"GET",headers:{"User-Agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 17_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.0 Mobile/15E148 Safari/604.1",Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","Accept-Language":"en-US,en;q=0.9","Accept-Encoding":"gzip, deflate, br",Connection:"keep-alive","Upgrade-Insecure-Requests":"1"},signal:o.signal});if(clearTimeout(r),!n.ok)throw new Error(`HTTP ${n.status}: ${n.statusText}`);return{html:await n.text(),status:n.status}}catch(n){throw clearTimeout(r),n}}static parseTimestamp(s){if(!s.trim())return new Date().toISOString();try{const e=[/(\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2})/,/(\d{2}\.\d{2}\.\d{4} \d{2}:\d{2})/,/([A-Za-z]{3} \d{1,2}, \d{4} \d{1,2}:\d{2} [AP]M)/,/(\d{2}\/\d{2}\/\d{4} \d{2}:\d{2})/,/(\d{2}:\d{2}:\d{2})/,/(\d{2}:\d{2})/];for(const r of e){const n=s.match(r);if(n){let a=n[1];if(a.includes(".")){const t=a.split(" ");if(t.length>=1){const l=t[0].split(".");l.length===3&&(a=`${l[2]}-${l[1]}-${l[0]}`,t[1]&&(a+=` ${t[1]}`))}}else if(a.includes("/")){const t=a.split(" ");if(t.length>=1){const l=t[0].split("/");l.length===3&&(a=`${l[2]}-${l[1]}-${l[0]}`,t[1]&&(a+=` ${t[1]}`))}}else a.match(/^\d{2}:\d{2}/)&&(a=`${new Date().toISOString().split("T")[0]} ${a}`);const c=new Date(a);if(!isNaN(c.getTime()))return c.toISOString()}}const o=new Date(s);if(!isNaN(o.getTime()))return o.toISOString()}catch(e){console.warn("Error parsing timestamp:",s,e)}return new Date().toISOString()}}p(T,"BASE_URL","https://receive-sms-online.info"),p(T,"REQUEST_DELAY",3e3),p(T,"MAX_RETRIES",2),p(T,"TIMEOUT",2e4),p(T,"FAST_TIMEOUT",12e3),p(T,"lastRequestTimes",new Map),p(T,"failureCount",new Map),p(T,"proxyPerformance",new Map),p(T,"CORS_PROXIES",["https://api.allorigins.win/raw?url=","https://api.allorigins.win/get?url=","https://corsproxy.io/?","https://cors-anywhere.herokuapp.com/","https://thingproxy.freeboard.io/fetch/","https://cors-proxy.htmldriven.com/?url="]),p(T,"proxyCache",new Map),p(T,"PROXY_CACHE_TTL",10*60*1e3),p(T,"USER_AGENTS",["Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36","Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/121.0","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.1 Safari/605.1.15"]);export{T as ReceiveSmsOnlineScraper};
